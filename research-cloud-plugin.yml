- name: Install and configure eWaterCycle Jupyter
  hosts:
    - all
    - localhost
  gather_facts: false
  vars:
    data_root: /mnt/data
    conda_root: /opt/conda
    singularity_image_root: '{{ data_root }}/singularity-images'
    esmvaltool_data: '{{ data_root }}/esmvaltool'
    grdc_root_dir: '{{ data_root }}/observation/grdc'
    grdc_location: '{{ data_root }}/observation/grdc/dailies'
    parameterset_dir: '{{ data_root }}/parameter-sets'
    singularity_dir: '{{ data_root }}/singularity-images'
    dcache_rclone_name: dcache
    dcache_url: https://webdav.grid.surfsara.nl:2880
    dcache_rw_token: null # Must be filled from other place
    dcache_root: '/'
    # TODO if a storage item is attached for cache use the change this var
    rclone_cache_dir: /tmp/rclone
    # TODO if rclone cache dir is on root disk prevent cache filling it 100% as this will cause OS problems
    rclone_max_gsize: 500
    tool_urls:
      explore: /
      jupyter: /jupyter
    launcher_encrypted: false
    jupyterhub_url: /jupyter
    launcher_base_path: /launcher
    jupyterhub_spawner_environment:
      # TODO move to config see https://github.com/eWaterCycle/ewatercycle/issues/240
      USGS_DATA_HOME: /tmp
  tasks:
    - name: Wait for system to become reachable
      wait_for_connection:
        timeout: 300

    - name: Gather facts for first time
      setup:

    - name: Show current available vars
      debug:
        msg: '{{ vars | to_nice_json }}'
    - name: Show current available hostvars
      debug:
        var: hostvars[inventory_hostname]
        verbosity: 4

    - name: Common stuff
      include_role:
        name: common
      tags:
        - ssh
      vars:
         extra_disks: []
    - name: Install gcc, git, ntp
      apt:
        update_cache: yes
        pkg:
          - git
          - gcc
          - g++
          - make
          - ntp
          - tmux
          - ksh
          - acl
          - net-tools

    # roles have hardcoded /mnt/apps, so create it before running roles
    - name: Apps root
      file:
        path: /mnt/apps
        state: directory
        mode: 0755

    # Container engines
    - name: singularity
      include_role:
        name: singularity

    # Install Conda + mamba
    - name: Install conda
      include_role:
        name: conda
      vars:
        conda_tarball_root: /opt

    # When dcache does not work use extra storage disk of 500Gb in SRC instead
    # On SRC dashboard this disk is called `ewatercycle-dcache-alternative` aka data disk
    # And mounted as /data/volume_2 or /data/volume_3

    # TODO OS disk almost full 11Gb of 15Gb in use
    # For home/temp/scratch need other storage
    # TODO mount scratch disk
    # TODO mount persistent home disk on SRC dashboard this disk is called `home-disk`
    # TODO mount rclone cache disk. Disk where rclone mount can put its vfs cache. Should give enough room for a singularity image, a big parameter set and some climate data.

    # Data disk and homedir are now mounted as /data/volume_2 and /data/volume_3
    # and user has symlink ~/data -> /data, which has disks as subdirs
    # and user has symlink ~/scratch -> /scratch , which points to root disk

    - name: Install rclone
      shell: |
        set -o pipefail && curl https://rclone.org/install.sh | bash
      args:
        executable: /bin/bash
        creates: /usr/bin/rclone

    - name: Configure rclone
      copy:
        dest: /etc/rclone.conf
        mode: 0644
        content: |
          [{{ dcache_rclone_name }}]
          type = webdav
          url = {{ dcache_url }}
          vendor = other
          user =
          pass =
          bearer_token = {{ dcache_ro_token }}

    - name: Data root
      file:
        path: '{{ data_root }}'
        state: directory
        mode: 0755

    - name: Mount dcache
      copy:
        dest: /etc/systemd/system/rclone.service
        mode: 0644
        content: |
          [Unit]
          Description=DCache shared data disk (rclone)
          AssertPathIsDirectory={{ data_root }}
          After=network.target

          [Service]
          Type=simple
          ExecStart=/usr/bin/rclone mount \
                  --config=/etc/rclone.conf \
                  --allow-other \
                  --read-only \
                  --cache-dir {{ rclone_cache_dir }} \
                  --vfs-cache-max-size {{ rclone_max_gsize }}G\
                  --vfs-cache-mode full \
                  {{ dcache_rclone_name }}:{{ dcache_root }} {{ data_root }}
          ExecStop=/bin/fusermount -u {{ data_root }}
          Restart=always
          RestartSec=10

          [Install]
          WantedBy=default.target

    - name: rclone mount started & enabled
      systemd:
        name: rclone
        state: started
        daemon_reload: yes
        enabled: yes

    # https://lab.ewatercycle.org/ functionality
    - name: Welcome page
      include_role:
        name: labstart

    # https://explore.ewatercycle.org/ functionality
    - name: Experiment launcher
      include_role:
        name: launcher

    - name: Explorer
      include_role:
        # TODO upgrade to latest release of terriajs, to try if latest version can hosted on /explore
        name: terria

    # https://jupyter.ewatercycle.org/ functionality
    - name: Create eWaterCycle conda env
      include_role:
        name: ewatercycle

    - name: Set up Jupyter lab/hub
      include_role:
        name: jupyter

    - name: Clean apt cache
      apt:
        autoclean: yes
        autoremove: yes

    - name: Debug
      debug:
        msg: The eWaterCycle Jupyter plugin has completed
