---
# tasks file for forecast-web
- name: Open ports
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop:
    - "{{ forecast_port }}"
- name: Create forecast directory
  file:
    path: "{{ item }}"
    state: directory
    owner: ubuntu
  loop:
    - "{{ forecast_dest_dir }}"
    - "{{ forecast_dest_dir }}/data"
    - "{{ forecast_dest_dir }}/config"
- name: Cronjob to copy forecast
  block:
    - name: Configure cron to mail
      cron:
        cron_file: forecast
        user: ubuntu
        name: MAILTO
        env: true
        value: '{{ cron_mailto }}'
    - name: Schedule forecast file copy
      cron:
        cron_file: forecast
        user: ubuntu
        name: "Forecast copy"
        minute: "10"
        job: "rclone copy {{ forecast_src_dir }}/$(date --date='yesterday' +\\%Y\\%m\\%d)/dischargeEns.nc {{ forecast_dest_dir }}/data/"
  when: forecast_cron_enabled
- name: Copy static discharge file
  command: rclone --config /home/ubuntu/.config/rclone/rclone.conf copy RD:/eWaterCycle/forecasts-5arcmin/dischargeEns.nc /mnt/apps/forecast/data/
  args:
    creates: /mnt/apps/forecast/data/dischargeEns.nc
  when: not forecast_cron_enabled
- name: Copy server config
  template:
    src: serverconfig.json.j2
    dest: "{{ forecast_dest_dir }}/config/serverconfig.json"
  notify: forecast-web
- name: Copy tomcat-server config
  template:
    src: server.xml.j2
    dest: "{{ forecast_dest_dir }}/config/server.xml"
  when: forecast_encrypted
  notify: forecast-web
- name: Copy tomcat-users config
  template:
    src: tomcat-users.xml.j2
    dest: "{{ forecast_dest_dir }}/config/tomcat-users.xml"
  notify: forecast-web
- name: Copy cesium-ncwms systemd file
  template:
    src: forecast-web.systemd.j2
    dest: /etc/systemd/system/forecast-web.service
  notify: forecast-web
- name: forecast-web.service enable during boot
  systemd:
    name: forecast-web
    state: reloaded
    daemon_reload: yes
    enabled: yes
