---
# tasks file for letsencrypt
- name:  Allow http traffic
  ufw:
    rule: allow
    port: 80
    proto: tcp
- name: Certbot ppa
  apt_repository:
    repo: ppa:certbot/certbot
- name:  Certbot
  apt:
    name: certbot
    update_cache: yes
- name: rsync
  apt:
    name: rsync
- name: Check letsencrypt
  stat:
    path: /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem
  register: privcert
- name: Check local letsencrypt cache
  local_action:
    module: stat
    path: "{{ letsencrypt_backup_root }}/{{ inventory_hostname }}/live/{{ inventory_hostname }}/privkey.pem"
  register: localprivcert
- name: CertBot from cache
  synchronize:
    src: "{{ letsencrypt_backup_root }}/{{ inventory_hostname }}/"
    dest: /etc/letsencrypt/
    recursive: yes
  when: privcert.stat.exists == False and localprivcert.stat.exists and not selfsigned
- name: CertBot
  command: certbot certonly --standalone --preferred-challenges http --non-interactive -d {{ inventory_hostname }} --agree-tos --email {{ certbot_email }}
  args:
    creates: /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem
  when: privcert.stat.exists == False and localprivcert.stat.exists == False and not selfsigned
- name: Self signed cert
  command: openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem -out /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem -subj "/C=NL/ST=Noord Holland/L=Amsterdam/O=Netherlands eScience Center/CN=eWatercycle"
  args:
    creates: /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem
  when: privcert.stat.exists == False and selfsigned and localprivcert.stat.exists == False
- name: CertBot build cache
  block:
  - name: Create backup folder
    local_action: 
      module: file
      path: "{{ letsencrypt_backup_root }}/{{ inventory_hostname }}"
      state: directory
  - name: Synchronize letsencrypt folder
    synchronize:
      src: /etc/letsencrypt/
      dest: "{{ letsencrypt_backup_root }}/{{ inventory_hostname }}/"
      recursive: yes
      mode: pull
  when: localprivcert.stat.exists == False and not selfsigned
