---
- name: Configure era5cli
  command: '{{ conda_environment_bin }}/era5cli config --uid {{ cds_uid }} --key cds_api_key'
  args:
    creates: '~/.config/era5cli/cds_key.txt'
- name: Climate data dir
  file:
    path: '{{ climate_data_root_dir }}'
    state: directory
    mode: '0755'
- name: ERA5 cmorized dir
  file:
    path: '{{ climate_data_root_dir }}/obs6/Tier3/ERA5'
    state: directory
    mode: '0755'
- name: ERA5 process script
  copy:
    src: era5process.py
    dest: /tmp/era5process.py

# We need to download era5 hourly data with era5cli
# and then convert it to CMOR format with python script which uses ESMValcore, the script needs the current and next year
# To make efficient use of available disk space we will chunk by variable and year,+year+1

- name: ERA5 download + hourly2daily + cmorize, loop variable
  loop: '{{ era5_variables | dict2items }}'
  loop_control:
    loop_var: var_item
  block:
    - name: Loop year
      loop: '{{ range(climate_begin_year, climate_end_year + 1) | list }}'
      block:
        - name: Output file check
          stat:
            path: '{{ climate_data_root_dir }}/obs6/Tier3/ERA5/OBS6_ERA5_reanaly_1_day_{{ var_item.value }}_{{ item }}-{{ item }}.nc'
          register: output_file
        - name: Generate output file
          when: not output_file.stat.exists
          block:
            - name: Hourly download dir
              file:
                path: '{{ climate_data_root_dir }}/Tier3/ERA5/v1/1hr/{{ var_item.value }}'
                state: directory
                mode: '0755'
            - name: Download current year
              command: '{{ conda_environment_bin }}/era5cli hourly --startyear {{ item }} --endyear {{ item }} --variables {{ var_item.value }}'
              args:
                chdir: '{{ climate_data_root_dir }}/Tier3/ERA5/v1/1hr/{{ var_item.value }}'
                # era5_total_precipitation_1990_hourly.nc
                creates: 'era5_{{ var_item.key }}_{{ item }}_hourly.nc'
            - name: Download current year + 1
              command: '{{ conda_environment_bin }}/era5cli hourly --startyear {{ item + 1 }} --endyear {{ item + 1 }} --variables {{ var_item.value }}'
              args:
                chdir: '{{ climate_data_root_dir }}/Tier3/ERA5/v1/1hr/{{ var_item.value }}'
                creates: '{{ climate_data_root_dir }}/era5_{{ var_item.key }}_{{ item + 1 }}_hourly.nc'
            - name: Convert to daily + cmorize
              command:
                argv:
                  - '{{ conda_environment_bin }}/python'
                  - /tmp/era5process.py
                  - '{{ item }}'
                  - '{{ var_item.key }}'
                  - '{{ var_item.value }}'
                  - '{{ climate_data_root_dir }}/obs6/Tier3/ERA5/OBS6_ERA5_reanaly_1_day_{{ var_item.value }}_{{ item }}-{{ item }}.nc'
                creates: '{{ climate_data_root_dir }}/obs6/Tier3/ERA5/OBS6_ERA5_reanaly_1_day_{{ var_item.value }}_{{ item }}-{{ item }}.nc'
            - name: Remove hourly data of current year
              file:
                state: absent
                path: '{{ climate_data_root_dir }}/Tier3/ERA5/v1/1hr/{{ var_item.value }}/era5_{{ var_item.key }}_{{ item }}_hourly.nc'
    - name: Remove hourly data of last year + 1
      file:
        state: absent
        path: '{{ climate_data_root_dir }}/Tier3/ERA5/v1/1hr/{{ var_item.value }}/era5_{{ var_item.key }}_{{ climate_end_year + 1 }}_hourly.nc'

- name: Orography file check
  stat:
    path: '{{ climate_data_root_dir }}/obs6/Tier3/ERA5/OBS6_ERA5_reanaly_1_fx_orog.nc'
  register: orog_file
- name: Orography
  when: not orog_file.stat.exists
  block:
    - name: ERA5 land process script
      copy:
        src: era5landprocess.py
        dest: /tmp/era5landprocess.py
    - name: Download dir
      file:
        path: '{{ climate_data_root_dir }}/Tier3/ERA5/v1/fx/orog'
        state: directory
        mode: '0755'
    - name: Download
      command: '{{ conda_environment_bin }}/era5cli hourly --startyear {{ climate_begin_year }} --months 1 --days 1 --hours 0 --levels surface --variables geopotential'
      args:
        chdir: '{{ climate_data_root_dir }}/Tier3/ERA5/v1/fx/orog'
        creates: 'era5_geopotential_{{ climate_begin_year }}_hourly.nc'
    - name: Cmorize
      command:
        argv:
          - '{{ conda_environment_bin }}/python'
          - /tmp/era5landprocess.py
          - '{{ climate_data_root_dir }}/obs6/Tier3/ERA5/OBS6_ERA5_reanaly_1_fx_orog.nc'
    - name: Remove script
      file:
        state: absent
        path: /tmp/era5landprocess.py
    - name: Raw data
      file:
        state: absent
        path: '{{ climate_data_root_dir }}/Tier3/ERA5/v1/fx/orog/era5_geopotential_{{ climate_begin_year }}_hourly.nc'

# Instead of downloading from source we could download from already processed data from dcache
